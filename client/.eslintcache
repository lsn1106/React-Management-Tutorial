[{"/home/suun/web/nadongbin/react_node/management/client/src/index.js":"1","/home/suun/web/nadongbin/react_node/management/client/src/reportWebVitals.js":"2","/home/suun/web/nadongbin/react_node/management/client/src/App.js":"3","/home/suun/web/nadongbin/react_node/management/client/src/components/Customer.js":"4","/home/suun/web/nadongbin/react_node/management/client/src/components/CustomerAdd.js":"5","/home/suun/web/nadongbin/react_node/management/client/src/components/CustomerDelete.js":"6"},{"size":688,"mtime":1610541956944,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1610363566935,"results":"9","hashOfConfig":"8"},{"size":6099,"mtime":1610544620921,"results":"10","hashOfConfig":"8"},{"size":722,"mtime":1610538118924,"results":"11","hashOfConfig":"8"},{"size":3890,"mtime":1610539898967,"results":"12","hashOfConfig":"8"},{"size":1652,"mtime":1610540394427,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"vnpzak",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"/home/suun/web/nadongbin/react_node/management/client/src/index.js",[],["30","31"],"/home/suun/web/nadongbin/react_node/management/client/src/reportWebVitals.js",[],"/home/suun/web/nadongbin/react_node/management/client/src/App.js",["32","33"],"import React, { Component } from 'react';\nimport './App.css';\nimport Customer from './components/Customer';\nimport CustomerAdd from './components/CustomerAdd';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport { createMuiTheme, withStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    minWidth: 1080\n  },\n  table: {\n    minWidth: 1080\n  },\n  menu: {\n    marginTop: 15,\n    marginBottom: 15,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  paper: {\n    marginLeft: 18,\n    marginRight: 18\n  },\n  progress: {\n    margins: theme.spacing(2),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: '12ch',\n      '&:focus': {\n        width: '20ch',\n      },\n    },\n  },\n});\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      customers: \"\",\n      completed: 0,\n      searchKeyword: \"\",\n    };\n  }\n\n  stateRefresh = () => {\n    this.setState({\n      customers: \"\",\n      completed: 0,\n      searchKeyword: \"\"\n    });\n    this.callApi()\n      .then(res => this.setState({ customers: res }))\n      .catch(err => console.log(err));\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(this.progress, 20);\n\n    this.callApi()\n      .then(res => this.setState({ customers: res }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch(`/api/customers`);\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    this.setState({ completed: completed >= 100 ? 0 : completed + 1 });\n  }\n\n  handleValueChange = e => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  render() {\n    const filteredComponents = data => {\n      data = data.filter(c => {\n        return c.name.indexOf(this.state.searchKeyword) > -1;\n      });\n      return data.map(c => {\n        return <Customer stateRefresh={this.stateRefresh} key={c.id} id={c.id} image={c.image} name={c.name} birthday={c.birthday} gender={c.gender} job={c.job} />;\n      });\n    }\n\n    const { classes } = this.props;\n    const cellList = [\"번호\", \"프로필 이미지\", \"이름\", \"생년월일\", \"성별\", \"직업\", \"설정\"]\n    return (\n      <div className={classes.root}>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <IconButton\n              edge=\"start\"\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography className={classes.title} variant=\"h6\" noWrap>\n              고객관리 시스템\n            </Typography>\n            <div className={classes.search}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                placeholder=\"검색하기\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ 'aria-label': 'search' }}\n                name=\"searchKeyword\"\n                value={this.state.searchKeyword}\n                onChange={this.handleValueChange}\n              />\n            </div>\n          </Toolbar>\n        </AppBar>\n        <div className={classes.menu}>\n          <CustomerAdd stateRefresh={this.stateRefresh} />\n        </div>\n        <Paper className={classes.paper} >\n          <Table className={classes.table}>\n            <TableHead>\n              <TableRow>\n                {cellList.map(c => {\n                  return (<TableCell>{c}</TableCell>);\n                })}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.customers ?\n                filteredComponents(this.state.customers) :\n                <TableRow>\n                  <TableCell colSpan=\"6\" align=\"center\">\n                    <CircularProgress className={classes.progress} variant=\"determinate\" value={this.state.completed} />\n                  </TableCell>\n                </TableRow>\n              }\n            </TableBody>\n          </Table>\n\n        </Paper>\n      </div>\n\n    );\n  }\n}\n\nexport default withStyles(styles, { withTheme: true })(App);                      \n","/home/suun/web/nadongbin/react_node/management/client/src/components/Customer.js",[],"/home/suun/web/nadongbin/react_node/management/client/src/components/CustomerAdd.js",["34"],"import React, { Component } from 'react';\nimport { post } from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { createMuiTheme, withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n  hidden: {\n    display: 'none'\n  }\n});\n\nclass CustomerAdd extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: null,\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: '',\n      fileName: '',\n      open: false\n    }\n  }\n\n  handleFormSubmit = (e) => {\n    e.preventDefault();\n    this.addCustomer()\n      .then(res => {\n        console.log(res.data);\n        this.props.stateRefresh();\n      });\n\n    this.setState({\n      file: null,\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: '',\n      fileName: '',\n      open: false\n    });\n  }\n\n  handleFileChange = e => {\n    this.setState({\n      file: e.target.files[0],\n      fileName: e.target.value\n    })\n  }\n\n  handleValueChange = e => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  addCustomer = () => {\n    const url = `/api/customers`;\n    const formData = new FormData();\n    formData.append(`image`, this.state.file);\n    formData.append(`name`, this.state.userName);\n    formData.append(`birthday`, this.state.birthday);\n    formData.append(`gender`, this.state.gender);\n    formData.append(`job`, this.state.job);\n    formData.append(`fileName`, this.state.fileName);\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }\n    return post(url, formData, config);\n  }\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  }\n\n  handleClose = () => {\n    this.setState({\n      file: null,\n      userName: '',\n      birthday: '',\n      gender: '',\n      job: '',\n      fileName: '',\n      open: false\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>\n          고객 추가하기\n        </Button>\n        <Dialog open={this.state.open} onClose={this.handleClose}>\n          <DialogTitle>고객 추가</DialogTitle>\n          <DialogContent>\n            <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChange} /> <br />\n            <label htmlFor=\"raised-button-file\">\n              <Button variant=\"contained\" component=\"span\" name=\"file\">\n                {this.state.fileName === \"\" ? \"프로필 이미지 선택\" : this.state.fileName}\n              </Button>\n\n            </label><br />\n            <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br />\n            <TextField label=\"생년월일\" type=\"text\" name=\"birthday\" value={this.state.birthday} onChange={this.handleValueChange} /><br />\n            <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br />\n            <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br />\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\n            <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    )\n  }\n};\n\nexport default withStyles(styles)(CustomerAdd);","/home/suun/web/nadongbin/react_node/management/client/src/components/CustomerDelete.js",[],["35","36"],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":11,"column":10,"nodeType":"43","messageId":"44","endLine":11,"endColumn":24},{"ruleId":"41","severity":1,"message":"45","line":19,"column":16,"nodeType":"43","messageId":"44","endLine":19,"endColumn":26},{"ruleId":"41","severity":1,"message":"42","line":9,"column":10,"nodeType":"43","messageId":"44","endLine":9,"endColumn":24},{"ruleId":"37","replacedBy":"46"},{"ruleId":"39","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.",["48"],["49"],"no-global-assign","no-unsafe-negation"]